/*
Given an expression, A, with operands and operators (OR , AND , XOR), in how many ways can you evaluate the expression to true, by grouping in different ways?

Operands are only true and false.

Return the number of ways to evaluate the expression modulo 103 + 3.

*/
unordered_map<string,int>mp;

int solve(string s,int i,int j, bool isTrue){
if(i>j)
return false;
if(i==j){
if(isTrue==true)
return s[i]=='T';
else
return s[i]=='F';
}

string temp=to_string(i)+" "+to_string(j)+" "+to_string(isTrue);

if(mp.find(temp)!=mp.end())
    return mp[temp];

int ans=0;

for(int k=i+1;k<=j-1;k+=2){
    
    int lt=solve(s,i,k-1,true);
    int lf=solve(s,i,k-1,false);
    int rt=solve(s,k+1,j,true);
    int rf=solve(s,k+1,j,false);
    
    if(s[k]=='&'){
        if(isTrue==true)
            ans=ans + lt*rt;
        else
            ans=ans + lf*rt + lt*rf + lf*rf;
    }
    
    if(s[k]=='|'){
        if(isTrue==true)
            ans= ans + lt*rt + lt*rf + lf*rt;
        else
            ans=ans+ lf*rf;
    }
    
    if(s[k]=='^'){
        if(isTrue==true)
            ans=ans+ lf*rt + lt*rf;
        else
            ans=ans+ lt*rt + lf*rf;
    }
}

ans=ans%1003;
return mp[temp]=ans;
}

int Solution::cnttrue(string A) {
mp.clear();
return solve(A,0,A.length()-1,true);
}
